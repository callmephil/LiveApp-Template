{"version":3,"sources":["App/AppNav.js","Components/Table/Table.js","Utils/Delayer.js","Services/AxiosUtils.js","Utils/StateManager.js","Services/MyContextServices.js","Pages/Dashboard.js","Pages/Unicorns.js","Pages/Users.js","App/App.js","serviceWorker.js","index.js"],"names":["AppNav","Fragment","className","href","to","Component","Table","RenderHeader","title","_fnReset","isLoadingLabel","props","isLoading","style","marginBottom","type","onClick","disabled","RenderEditMode","_fnGet","_fnDelete","id","isEditMode","width","GetTableStructure","structure","map","field","textTransform","key","GetColumnData","list","element","pos","fieldValue","Object","values","JSON","stringify","random","Math","ID","position","value","index","this","textAlign","PureComponent","setSleepState","ref","setLoading","milliseconds","Promise","resolve","current","setTimeout","then","process","REACT_APP_API_URL","REACT_APP_SOCKET_URL","API_URL","SOCKET_API","socketIOClient","AxiosConfig","headers","handleCatch","err","axios","isCancel","console","info","message","success","result","error","AxiosUtils","route","refTimeout","getCancelToken","CancelToken","source","onGetAll","params","cancelToken","a","async","get","_api_url","token","response","data","onGet","onCreate","post","catch","onUpdate","patch","onDelete","delete","onReset","socket","arrayOfObjectsManager","_this","targetName","primaryKey","_isMounted","handleStateUpdate","newList","el","setState","handleStateCreate","optionals","handleStateDelete","filter","handleStateGet","find","handleStateUoC","isIndex","findIndex","push","MyContext","React","createContext","Context","_GetByID","state","primaryID","editData","_ClearEditMode","fetchList","toast","toastIcon","fetchByID","manager","forceUpdate","_UpdateByID","_DeleteByID","_Create","_Reset","isSingleFetch","createRef","io","handleSocket","isViewMode","cancel","clearTimeout","off","prevProps","prevState","length","on","method","parseInt","parse","creation_date","Provider","children","defaultProps","Dashboard","RenderUnicornTable","Consumer","context","RenderUserTable","UnicornsCreateForm","unicorn_id","name","age","color","handleSumbit","event","preventDefault","handleReset","onChangeValue","target","Number","componentDidUpdate","toggleEditMode","isSubmitOrEditLabel","onSubmit","placeholder","onChange","required","pattern","min","contextType","Unicorns","UsersCreateForm","user_id","first_name","last_name","email","Users","App","draggable","newestOnTop","autoClose","closeOnClick","pauseOnHover","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5919fc38.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./AppNavbar.css\";\r\n\r\nexport default class AppNav extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"skipLink\">\r\n          <a href=\"#mainContent\">Skip to Main Content</a>\r\n        </div>\r\n        <nav className=\"navbar navbar-expand-sm navbar-light border-bottom justify-content-between\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            LiveApp\r\n          </Link>\r\n          <div className=\"navbar-nav\">\r\n            <Link className=\"nav-item nav-link active\" to=\"/\">\r\n              Dashboard\r\n            </Link>\r\n            <Link className=\"nav-item nav-link active\" to=\"users\">\r\n              Users\r\n            </Link>\r\n            <Link className=\"nav-item nav-link active\" to=\"unicorns\">\r\n              Unicorns\r\n            </Link>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Table extends PureComponent {\r\n  static propTypes = {\r\n    list: PropTypes.array.isRequired,\r\n    _fnGet: PropTypes.func.isRequired,\r\n    _fnDelete: PropTypes.func.isRequired,\r\n    _fnReset: PropTypes.func.isRequired,\r\n    structure: PropTypes.array.isRequired,\r\n    isEditMode: PropTypes.bool,\r\n    isLoading: PropTypes.bool,\r\n    title: PropTypes.string\r\n  };\r\n\r\n  RenderHeader = ({ title, _fnReset }) => {\r\n    const isLoadingLabel = this.props.isLoading ? \"Updating...\" : \"Updated\";\r\n\r\n    return (\r\n      <div style={{ marginBottom: \"10px\" }} className=\"container\">\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col col-sm-auto\"></div>\r\n          <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-info\"\r\n            >\r\n              {isLoadingLabel}\r\n            </button>\r\n          <div>\r\n            <h4 className=\"col col-md-auto\">{title}</h4>\r\n          </div>\r\n          <div className=\"col col-sm-auto\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-outline-warning\"\r\n              onClick={() => _fnReset()}\r\n              disabled={this.props.isLoading}\r\n            >\r\n              Reset Data\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  RenderEditMode = ({ _fnGet, _fnDelete, id }) => {\r\n    if (!this.props.isEditMode) return null;\r\n    else {\r\n      return (\r\n        <td>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                <button\r\n                  style={{ width: \"100%\" }}\r\n                  className=\"btn btn-info btn-sm\"\r\n                  onClick={() => _fnGet(id)}\r\n                  disabled={this.props.isLoading}\r\n                >\r\n                  EDIT\r\n                </button>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <button\r\n                  className=\"btn btn-outline-danger btn-sm\"\r\n                  onClick={() => _fnDelete(id)}\r\n                  disabled={this.props.isLoading}\r\n                >\r\n                  DELETE\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </td>\r\n      );\r\n    }\r\n  };\r\n\r\n  GetTableStructure = () => {\r\n    // Recieve Array of string [a,b,c,d]\r\n    return this.props.structure.map(field => {\r\n      return (\r\n        <th style={{ textTransform: \"capitalize\" }} key={field}>\r\n          {field}\r\n        </th>\r\n      );\r\n    });\r\n  };\r\n\r\n  GetColumnData = () => {\r\n    const { list, _fnGet, _fnDelete } = this.props;\r\n    return list.map(element => {\r\n      const fieldValue = Object.values(element);\r\n      //!!! Very Very unefficient\r\n      const randomKey = pos => {\r\n        return JSON.stringify({\r\n          random: Math.random(),\r\n          ID: fieldValue[0],\r\n          position: pos\r\n        });\r\n      };\r\n      return (\r\n        <tr key={randomKey(element)}>\r\n          {fieldValue.map((value, index) => (\r\n            <td key={index}>{value}</td>\r\n          ))}\r\n          <this.RenderEditMode\r\n            _fnGet={_fnGet}\r\n            _fnDelete={_fnDelete}\r\n            id={fieldValue[0]}\r\n          />\r\n        </tr>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col\">\r\n        <this.RenderHeader\r\n          title={this.props.title}\r\n          _fnReset={this.props._fnReset}\r\n        />\r\n        <div className=\"table-responsive\">\r\n          <table className=\"table table-hover table-dark\">\r\n            <thead style={{ textAlign: \"center\" }}>\r\n              <tr>\r\n                <this.GetTableStructure />\r\n                {this.props.isEditMode ? <th> Actions </th> : null}\r\n              </tr>\r\n            </thead>\r\n            <tbody style={{ textAlign: \"center\" }} className=\"table-hover\">\r\n              <this.GetColumnData />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export const setSleepState = (ref, setLoading, milliseconds = 1000) => {\r\n  setLoading(true);\r\n  return new Promise(\r\n    resolve => (ref.current = setTimeout(resolve, milliseconds))\r\n  ).then(() => setLoading(false));\r\n};\r\n\r\nexport const setCancelTimeout = ref => {\r\n  if (ref.current) {\r\n    clearTimeout(ref.current);\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { setSleepState } from \"../Utils/Delayer\";\r\n\r\nconst { REACT_APP_API_URL, REACT_APP_SOCKET_URL } = process.env;\r\nconst API_URL = REACT_APP_API_URL;\r\nconst SOCKET_API = socketIOClient(REACT_APP_SOCKET_URL);\r\nconst AxiosConfig = {\r\n  headers: { \"Content-Type\": \"application/json; charset=utf-8\" }\r\n};\r\n\r\nconst handleCatch = err => {\r\n  if (axios.isCancel(err)) {\r\n    console.info(\"Request Canceled\", err.message);\r\n    return {\r\n      success: true,\r\n      isCancel: true,\r\n      isLoading: false,\r\n      result: null\r\n    };\r\n  } else {\r\n    console.error(\"Axios Catch\", err.message);\r\n    return {\r\n      success: false,\r\n      isCancel: false,\r\n      isLoading: false,\r\n      result: err.message\r\n    };\r\n  }\r\n};\r\n\r\nexport default class AxiosUtils {\r\n  constructor(setLoading, route, refTimeout) {\r\n    this._api_url = `${API_URL}/${route}`;\r\n    this.setLoading = setLoading;\r\n    this.socket = SOCKET_API;\r\n    this.refTimeout = refTimeout;\r\n  }\r\n\r\n  getCancelToken = () => {\r\n    return axios.CancelToken.source();\r\n  };\r\n\r\n  onGetAll = (params, cancelToken) => {\r\n    return setSleepState(this.refTimeout, this.setLoading, 1000).then(\r\n      async () => {\r\n        try {\r\n          const response = await axios.get(this._api_url, {\r\n            ...AxiosConfig,\r\n            params,\r\n            cancelToken: cancelToken.token\r\n          });\r\n\r\n          if (response && response.data.result) {\r\n            return {\r\n              success: true,\r\n              isCancel: false,\r\n              isLoading: false,\r\n              result: response.data.result\r\n            };\r\n          }\r\n        } catch (err) {\r\n          return handleCatch(err);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  onGet = async (id, cancelToken) => {\r\n    return setSleepState(this.refTimeout, this.setLoading, 500).then(\r\n      async () => {\r\n        try {\r\n          const response = await axios.get(`${this._api_url}/${id}`, {\r\n            ...AxiosConfig,\r\n            cancelToken: cancelToken.token\r\n          });\r\n\r\n          if (response && response.data.result) {\r\n            return {\r\n              success: true,\r\n              isCancel: false,\r\n              isLoading: false,\r\n              result: response.data.result\r\n            };\r\n          } else\r\n            return {\r\n              success: false,\r\n              isCancel: false,\r\n              result: null\r\n            };\r\n        } catch (err) {\r\n          return handleCatch(err);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  onCreate = (props, cancelToken) => {\r\n    return setSleepState(this.refTimeout, this.setLoading).then(async () => {\r\n      const response = await axios\r\n        .post(this._api_url, props, {\r\n          ...AxiosConfig,\r\n          cancelToken: cancelToken.token\r\n        })\r\n        .catch(err => {\r\n          return handleCatch(err);\r\n        });\r\n\r\n      return response;\r\n    });\r\n  };\r\n\r\n  onUpdate = async (id, props, cancelToken) => {\r\n    return setSleepState(this.refTimeout, this.setLoading).then(async () => {\r\n      const response = await axios\r\n        .patch(`${this._api_url}/${id}`, props, {\r\n          ...AxiosConfig,\r\n          cancelToken: cancelToken.token\r\n        })\r\n        .catch(err => {\r\n          return handleCatch(err);\r\n        });\r\n\r\n      return response;\r\n    });\r\n  };\r\n\r\n  onDelete = async (id, cancelToken) => {\r\n    return setSleepState(this.refTimeout, this.setLoading).then(async () => {\r\n      const response = await axios\r\n        .delete(`${this._api_url}/${id}`, {\r\n          ...AxiosConfig,\r\n          cancelToken: cancelToken.token\r\n        })\r\n        .catch(err => {\r\n          return handleCatch(err);\r\n        });\r\n\r\n      return response;\r\n    });\r\n  };\r\n\r\n  // Temporary for testing purposes\r\n  onReset = cancelToken => {\r\n    return setSleepState(this.refTimeout, this.setLoading).then(async () => {\r\n      const response = await axios.delete(`${this._api_url}`, {\r\n          ...AxiosConfig,\r\n          cancelToken: cancelToken.token\r\n        })\r\n        .catch(err => {\r\n          return handleCatch(err);\r\n        });\r\n\r\n      return response;\r\n    });\r\n  };\r\n}\r\n","// import { debounce } from \"lodash\";\r\n\r\n// export const onChangeValue = (debouncEventRef) => {\r\n//   const debounceEvent = (_fn, timer = 500, options = null) => {\r\n//     debouncEventRef.current = debounce(_fn, timer, options);\r\n//     return e => {\r\n//       e.persist();\r\n//       return debounceEvent(e);\r\n//     };\r\n//   }\r\n// }\r\n\r\n// https://itnext.io/improving-react-application-perfomance-by-avoiding-unnecessary-updates-bd96d03dec40\r\n\r\n\r\nexport const arrayOfObjectsManager = (_this, list, targetName, primaryKey, _isMounted = true) => {\r\n  const handleStateUpdate = (id, data) => {\r\n    const newList = list.map(el =>\r\n      el[primaryKey] === id ? { ...el, ...data } : el\r\n    );\r\n    if (_isMounted)\r\n      return !_this ? newList : _this.setState({ [targetName]: newList });\r\n  };\r\n\r\n  const handleStateCreate = (id, data, optionals) => {\r\n    const newList = [...list, { [primaryKey]: id, ...data, ...optionals }];\r\n    if (_isMounted)\r\n      return !_this ? newList : _this.setState({ [targetName]: newList });\r\n  };\r\n\r\n  const handleStateDelete = id => {\r\n    const result = list.filter(data => data[primaryKey] !== id);\r\n    if (_isMounted)\r\n      return !_this ? result : _this.setState({ [targetName]: result });\r\n  };\r\n\r\n  const handleStateGet = id => {\r\n    const result = list.find(data => data[primaryKey] === id);\r\n    if (_isMounted)\r\n      return !_this ? result : _this.setState({ [targetName]: result });\r\n  };\r\n\r\n  const handleStateUoC = (id, data) => {\r\n    const newList = list;\r\n    const isIndex = list.findIndex(el => el[primaryKey] === id)\r\n    if (isIndex >= 0)\r\n      newList[isIndex] = { ...newList[isIndex], ...data }\r\n    else {\r\n      newList.push({ [primaryKey]: id, ...data })\r\n    }\r\n    // return !_this ? newList : _this.setState({ [targetName]: newList });\r\n    return newList;\r\n  }\r\n\r\n  return {\r\n    handleStateUpdate,\r\n    handleStateCreate,\r\n    handleStateDelete,\r\n    handleStateGet,\r\n    handleStateUoC\r\n  };\r\n};\r\n\r\n\r\n// export const ArrayManager = (_this) => { }\r\n// export const ObjectManager = (_this) => { }","import React, { PureComponent } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport AxiosUtils from \"./AxiosUtils\";\r\nimport { arrayOfObjectsManager } from \"../Utils/StateManager\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setCancelTimeout } from \"../Utils/Delayer\";\r\n\r\nexport const MyContext = React.createContext(null);\r\n\r\nclass Context extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      editData: null,\r\n      isLoading: false,\r\n      isEditMode: false,\r\n      isSingleFetch: false\r\n    };\r\n\r\n    // const setLoading = isLoading => this.setState({ isLoading });\r\n    this.refTimeout = React.createRef();\r\n    this.AxiosUtils = new AxiosUtils(this.setLoading, this.props.route, this.refTimeout);\r\n    this.cancelToken = this.AxiosUtils.getCancelToken();\r\n    this.io = this.AxiosUtils.socket;\r\n    this.manager = null; // State Manager\r\n  }\r\n  static defaultProps = {\r\n    isViewMode: false\r\n  };\r\n  static propTypes = {\r\n    isViewMode: PropTypes.bool,\r\n    route: PropTypes.string.isRequired,\r\n    primaryID: PropTypes.string.isRequired,\r\n    toastIcon: PropTypes.string.isRequired\r\n  };\r\n\r\n  setLoading = isLoading => this.setState({ isLoading });\r\n\r\n  componentDidMount() {\r\n    this.fetchList();\r\n    this.handleSocket(this.props.isViewMode);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.cancelToken.cancel(\"unmounting\");\r\n    setCancelTimeout(this.refTimeout);\r\n    this.io.off(`/api/${this.props.route}`);\r\n    this.io.off(\"ERROR\");\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.list.length > 0)\r\n      if (prevState.list !== this.state.list)\r\n        this.manager = arrayOfObjectsManager(\r\n          this,\r\n          this.state.list,\r\n          \"list\",\r\n          this.props.primaryID\r\n        );\r\n  }\r\n\r\n  handleSocket(isViewMode) {\r\n    this.io.on(\"ERROR\", message => toast.error(message));\r\n    this.io.on(`/api/${this.props.route}`, (method, id, data) => {\r\n      if (this.state.isSingleFetch && method !== \"DELETE\")\r\n        this.fetchByID(parseInt(id));\r\n      else if (isViewMode) this.fetchList();\r\n      else {\r\n        switch (method) {\r\n          case \"DELETE\":\r\n            this.manager.handleStateDelete(parseInt(id));\r\n            break;\r\n          case \"POST\":\r\n            this.manager.handleStateCreate(parseInt(id), JSON.parse(data), {\r\n              creation_date: \"NOW\"\r\n            });\r\n            break;\r\n          case \"PATCH\":\r\n            this.manager.handleStateUpdate(parseInt(id), JSON.parse(data));\r\n            break;\r\n          default:\r\n            console.error(`unknown method ${method}`);\r\n        }\r\n        toast(`${method} ${this.props.toastIcon} ID:${id}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  _GetByID = id => {\r\n    const result = this.state.list.find(\r\n      data => data[this.props.primaryID] === id\r\n    );\r\n    if (result) this.setState({ isEditMode: true, editData: result });\r\n  };\r\n\r\n  _ClearEditMode = () => {\r\n    this.setState({ isEditMode: false, editData: null });\r\n  };\r\n\r\n  fetchList = async () => {\r\n    const response = await this.AxiosUtils.onGetAll(null, this.cancelToken);\r\n    if (response.success) {\r\n      if (response.result && !response.isCancel) {\r\n        this.setState({ list: response.result }, () => {\r\n          toast(`${this.props.toastIcon} List Loaded`);\r\n        });\r\n      }\r\n    } else toast.error(`${this.props.toastIcon} ${response.result}`);\r\n  };\r\n\r\n  fetchByID = async id => {\r\n    const response = await this.AxiosUtils.onGet(id, this.cancelToken);\r\n    if (response.success) {\r\n      if (response.result && !response.isCancel) {\r\n        const list = this.manager.handleStateUoC(id, response.result);\r\n        this.forceUpdate(() => {\r\n          this.setState({ list });\r\n        });\r\n      }\r\n      toast(`${this.props.toastIcon} fetchByID: ${id}`);\r\n    } else toast.error(`${this.props.toastIcon} ${response.result}`);\r\n  };\r\n\r\n  _UpdateByID = (id, data) => {\r\n    this.AxiosUtils.onUpdate(id, data, this.cancelToken);\r\n  };\r\n\r\n  _DeleteByID = id => {\r\n    this.AxiosUtils.onDelete(id, this.cancelToken);\r\n  };\r\n\r\n  _Create = data => {\r\n    this.AxiosUtils.onCreate(data, this.cancelToken);\r\n  };\r\n\r\n  _Reset = () => {\r\n    this.AxiosUtils.onReset(this.cancelToken).then(result => {\r\n      if (result) {\r\n        this.setState({ list: [] });\r\n        this.manager = arrayOfObjectsManager(\r\n          this,\r\n          [],\r\n          \"list\",\r\n          this.props.primaryID\r\n        );\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      state,\r\n      _GetByID,\r\n      _UpdateByID,\r\n      _DeleteByID,\r\n      _Create,\r\n      _Reset,\r\n      _ClearEditMode\r\n    } = this;\r\n    return (\r\n      <MyContext.Provider\r\n        value={{\r\n          state,\r\n          _Create,\r\n          _GetByID,\r\n          _UpdateByID,\r\n          _DeleteByID,\r\n          _ClearEditMode,\r\n          _Reset\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </MyContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Context;\r\n","import React, { Component } from \"react\";\r\nimport \"../Layout/form.css\";\r\nimport Table from \"../Components/Table/Table\";\r\nimport Context, { MyContext } from \"../Services/MyContextServices\";\r\n\r\nexport default class Dashboard extends Component {\r\n  RenderUnicornTable = () => (\r\n    <Context\r\n      isViewMode={true}\r\n      route={\"unicorns\"}\r\n      primaryID=\"unicorn_id\"\r\n      toastIcon={\"🦄\"}\r\n    >\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <Table\r\n            list={context.state.list}\r\n            _fnGet={context._GetByID}\r\n            _fnReset={context._Reset}\r\n            _fnDelete={context._DeleteByID}\r\n            isLoading={context.state.isLoading}\r\n            title={\"Precious List Of Existing Unicorns\"}\r\n            structure={[\"ID\", \"name\", \"age\", \"color\", \"creation date\"]}\r\n          />\r\n        )}\r\n      </MyContext.Consumer>\r\n    </Context>\r\n  );\r\n\r\n  RenderUserTable = () => (\r\n    <Context\r\n      isViewMode={true}\r\n      route={\"users\"}\r\n      primaryID=\"user_id\"\r\n      toastIcon={\"👤\"}\r\n    >\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <Table\r\n            list={context.state.list}\r\n            _fnGet={context._GetByID}\r\n            _fnReset={context._Reset}\r\n            _fnDelete={context._DeleteByID}\r\n            isLoading={context.state.isLoading}\r\n            structure={[\r\n              \"ID\",\r\n              \"first name\",\r\n              \"last name\",\r\n              \"email\",\r\n              \"creation date\"\r\n            ]}\r\n            title={\"Precious List Of Existing Users\"}\r\n          />\r\n        )}\r\n      </MyContext.Consumer>\r\n    </Context>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1> Dashboard </h1>\r\n        <div className=\"row\">\r\n          <this.RenderUnicornTable />\r\n          <this.RenderUserTable />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Table from \"../Components/Table/Table\";\r\nimport Context, { MyContext } from \"../Services/MyContextServices\";\r\n\r\nclass UnicornsCreateForm extends Component {\r\n  static contextType = MyContext;\r\n  state = {\r\n    unicorn_id: null,\r\n    name: \"\",\r\n    age: 1,\r\n    color: \"White\",\r\n    creation_date: \"\"\r\n  };\r\n\r\n  handleSumbit = event => {\r\n    event.preventDefault();\r\n    const { unicorn_id, name, age, color } = this.state;\r\n    if (this.context.state.isEditMode)\r\n      this.context._UpdateByID(unicorn_id, { name, age, color });\r\n    else {\r\n      this.context._Create({ name, age, color });\r\n    }\r\n  };\r\n\r\n  handleReset = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      unicorn_id: null,\r\n      name: \"\",\r\n      age: 1,\r\n      color: \"White\",\r\n      creation_date: \"\"\r\n    });\r\n    if (this.context.state.isEditMode) this.context._ClearEditMode();\r\n  };\r\n\r\n  onChangeValue = event => {\r\n    const { name, value, type } = event.target;\r\n\r\n    if (type === \"number\") this.setState({ [name]: Number(value) });\r\n    else this.setState({ [name]: value });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.toggleEditMode();\r\n  };\r\n\r\n  toggleEditMode = () => {\r\n    const { isEditMode, editData } = this.context.state;\r\n    if (isEditMode)\r\n      if (editData.unicorn_id !== this.state.unicorn_id)\r\n        this.setState({ ...editData });\r\n  };\r\n\r\n  render() {\r\n    const { name, age, color, unicorn_id } = this.state;\r\n    const isSubmitOrEditLabel = unicorn_id\r\n      ? `Edit - ID: ${unicorn_id}`\r\n      : \"Submit\";\r\n    return (\r\n      <form\r\n        className=\"create-form\"\r\n        onSubmit={this.handleSumbit}\r\n        onReset={this.handleReset}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Name...\"\r\n            className=\"form-control\"\r\n            onChange={this.onChangeValue}\r\n            value={name}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            required\r\n            name=\"age\"\r\n            value={age}\r\n            type=\"number\"\r\n            pattern=\"[0-9]{1,5}\"\r\n            min={1}\r\n            placeholder=\"Age...\"\r\n            className=\"form-control\"\r\n            onChange={this.onChangeValue}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <select\r\n            value={color}\r\n            name=\"color\"\r\n            className=\"form-control\"\r\n            onChange={this.onChangeValue}\r\n          >\r\n            <option value=\"White\">White</option>\r\n            <option value=\"Blue\">Blue</option>\r\n            <option value=\"Pink\">Pink</option>\r\n            <option value=\"Zebra\">Zebra</option>\r\n            <option value=\"Gold\">Gold</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success btn-lg btn-block btn-sm\"\r\n          disabled={this.context.state.isLoading}\r\n        >\r\n          {isSubmitOrEditLabel}\r\n        </button>\r\n        <button\r\n          type=\"reset\"\r\n          className=\"btn btn-warning btn-lg btn-block btn-sm\"\r\n          disabled={this.context.state.isLoading}\r\n        >\r\n          Clear\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Unicorns extends Component {\r\n  render() {\r\n    return (\r\n      <Context\r\n        isViewMode={false}\r\n        route={\"unicorns\"}\r\n        primaryID=\"unicorn_id\"\r\n        toastIcon={\"🦄\"}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <h1> Unicorns </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              <MyContext.Consumer>\r\n                {context => (\r\n                  <Table\r\n                    list={context.state.list}\r\n                    _fnGet={context._GetByID}\r\n                    _fnDelete={context._DeleteByID}\r\n                    _fnReset={context._Reset}\r\n                    isLoading={context.state.isLoading}\r\n                    structure={[\"ID\", \"name\", \"age\", \"color\", \"creation date\"]}\r\n                    isEditMode={true}\r\n                    title=\"Precious List Of Existing Unicorns\"\r\n                  />\r\n                )}\r\n              </MyContext.Consumer>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <h3 className=\"blockquote text-center\"> C.R.U.D </h3>\r\n              <UnicornsCreateForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Context>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Table from \"../Components/Table/Table\";\r\nimport Context, { MyContext } from \"../Services/MyContextServices\";\r\n\r\nclass UsersCreateForm extends Component {\r\n  static contextType = MyContext;\r\n  state = {\r\n    user_id: null,\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    creation_date: \"\"\r\n  };\r\n\r\n  handleSumbit = event => {\r\n    event.preventDefault();\r\n    const { user_id, first_name, last_name, email } = this.state;\r\n    if (this.context.state.isEditMode)\r\n      this.context._UpdateByID(user_id, { first_name, last_name, email });\r\n    else {\r\n      this.context._Create({ first_name, last_name, email });\r\n    }\r\n  };\r\n\r\n  handleReset = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      user_id: null,\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      creation_date: \"\"\r\n    });\r\n    if (this.context.state.isEditMode) this.context._ClearEditMode();\r\n  };\r\n\r\n  onChangeValue = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    this.toggleEditMode();\r\n  };\r\n\r\n  toggleEditMode = () => {\r\n    const { isEditMode, editData } = this.context.state;\r\n    if (isEditMode)\r\n      if (editData.user_id !== this.state.user_id)\r\n        this.setState({ ...editData });\r\n  };\r\n\r\n  render() {\r\n    const { first_name, last_name, email, user_id } = this.state;\r\n    const isSubmitOrEditLabel = user_id ? `Edit - ID: ${user_id}` : \"Submit\";\r\n    return (\r\n      <form\r\n        className=\"create-form\"\r\n        onSubmit={this.handleSumbit}\r\n        onReset={this.handleReset}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"fname\"\r\n            name=\"first_name\"\r\n            placeholder=\"First Name...\"\r\n            className=\"form-control\"\r\n            onChange={this.onChangeValue}\r\n            value={first_name}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"flast\"\r\n            required\r\n            name=\"last_name\"\r\n            type=\"text\"\r\n            value={last_name}\r\n            placeholder=\"Last Name...\"\r\n            className=\"form-control\"\r\n            onChange={this.onChangeValue}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            id=\"femail\"\r\n            required\r\n            name=\"email\"\r\n            type=\"text\"\r\n            value={email}\r\n            placeholder=\"Email...\"\r\n            className=\"form-control\"\r\n            onChange={this.onChangeValue}\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-success btn-lg btn-block btn-sm\"\r\n        >\r\n          {isSubmitOrEditLabel}\r\n        </button>\r\n        <button\r\n          type=\"reset\"\r\n          className=\"btn btn-warning btn-lg btn-block btn-sm\"\r\n        >\r\n          Clear\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default class Users extends Component {\r\n  render() {\r\n    return (\r\n      <Context\r\n        isViewMode={false}\r\n        route={\"users\"}\r\n        primaryID=\"user_id\"\r\n        toastIcon={\"👤\"}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <h1> Users </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-8\">\r\n              <MyContext.Consumer>\r\n                {context => (\r\n                  <Table\r\n                    list={context.state.list}\r\n                    _fnGet={context._GetByID}\r\n                    _fnDelete={context._DeleteByID}\r\n                    _fnReset={context._Reset}\r\n                    isLoading={context.state.isLoading}\r\n                    structure={[\r\n                      \"ID\",\r\n                      \"first name\",\r\n                      \"last name\",\r\n                      \"email\",\r\n                      \"creation date\"\r\n                    ]}\r\n                    isEditMode={true}\r\n                    title=\"Precious List Of Existing Users\"\r\n                  />\r\n                )}\r\n              </MyContext.Consumer>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <h3 className=\"blockquote text-center\"> C.R.U.D </h3>\r\n              <UsersCreateForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Context>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AppNav from \"./AppNav\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"../Pages/Dashboard\";\r\nimport Unicorns from \"../Pages/Unicorns\";\r\nimport Users from \"../Pages/Users\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ToastContainer\r\n          draggable\r\n          newestOnTop\r\n          autoClose={1500}\r\n          closeOnClick={false}\r\n          pauseOnHover={false}\r\n          position=\"bottom-left\"\r\n        />\r\n        <AppNav />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/users\" component={Users} />\r\n          <Route path=\"/unicorns\" component={Unicorns} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}